20. Movie-related functions

movies = [
    {"name": "Skibidi Destruction", "imdb": 7.0, "category": "Thriller"},
    {"name": "Team Fortress Classic", "imdb": 6.3, "category": "Action"},
    {"name": "Dark Knight", "imdb": 9.0, "category": "Adventure"},
    {"name": "iphone 19", "imdb": 8.0, "category": "Drama"},
    {"name": "The 9th may", "imdb": 6.2, "category": "Romance"},
    {"name": "TempleOS", "imdb": 7.4, "category": "Romance"},
    {"name": "I love Trains", "imdb": 6.0, "category": "Romance"},
    {"name": "Shrek is love, Shrek is life", "imdb": 5.4, "category": "Romance"},
    {"name": "9 The Film", "imdb": 3.2, "category": "War"},
    {"name": "Fixing Good", "imdb": 4.0, "category": "Crime"},
    {"name": "My name is Kozha", "imdb": 7.2, "category": "Comedy"},
    {"name": "Crime and Punishment", "imdb": 9.2, "category": "Suspense"},
    {"name": "Virtue and Reward", "imdb": 7.0, "category": "Suspense"},
    {"name": "Principles of Programming 2 Exam", "imdb": 4.2, "category": "Thriller"},
    {"name": "Shrek is love, Shrek is life 2", "imdb": 7.2, "category": "Romance"}
]

def is_good_movie(movie):
    return movie["imdb"] > 5.5

def good_movies(movies):
    return [m for m in movies if m["imdb"] > 5.5]

def movies_by_category(movies, category):
    return [m for m in movies if m["category"] == category]

def average_imdb(movies):
    return sum(m["imdb"] for m in movies) / len(movies)

def average_imdb_by_category(movies, category):
    cat_movies = [m for m in movies if m["category"] == category]
    return sum(m["imdb"] for m in cat_movies) / len(cat_movies)
